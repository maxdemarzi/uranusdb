openapi: "3.0.0"
info:
  version: 1.0.0
  title: UranusDB API
  description: The UranusDB HTTP API
  termsOfService: http://uranusdb.com/terms/
  contact:
      name: Max De Marzi
      email: maxdemarzi@hotmail.com
      url: http://maxdemarzi.com
  license:
      name: GNU Affero General Public License v3.0
      url: https://www.gnu.org/licenses/agpl.html
servers:
  - url: http://localhost:8080/db
paths:
  /relationship_types:
    get:
      description: Returns all relationship types in the database.
      operationId: getRelationshipTypes
      tags:
        - relationship_type
      responses:
        '200':
          description: Relationship Types Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
          examples:
            single:
              summary: A single relationship type example
              value: ["FRIENDS"]
            multiple:
              summary: Multiple relationship types example
              value: ["FRIENDS", "LIKES", "FOLLOWS"]
  /relationship_types/count:
    get:
      description: Returns all relationship type counts in the database.
      operationId: getRelationshipTypesCounts
      tags:
        - relationship_type
      responses:
        '200':
          description: Relationship Type Counts Response
          content:
            application/json:
              schema:
                type: array
                $ref: '#/components/schemas/Counts'
          examples:
            single:
              summary: A single relationship type count example
              value: {"FRIENDS": 2}
            multiple:
              summary: Multiple relationship type counts example
              value: {"FRIENDS":2, "LIKES":1, "FOLLOWS":4}
  /relationship_type/{type}/count:
    get:
      description: Returns a relationship type count in the database.
      operationId: getRelationshipTypeCount
      tags:
        - relationship_type
      parameters:
        - name: type
          in: path
          required: true
          description: The relationship type count to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Relationship Type Count Response
          content:
            application/json:
              schema:
                type: integer
        '404':
          description: Relationship Type Not Found
  /node/{label}/{id}:
    get:
      summary: Retrieve node by label and id
      operationId: getNodeByLabelAndId
      tags:
        - node
      parameters:
        - name: label
          in: path
          required: true
          description: The label of the Node to retrieve
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: The id of the Node to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Node Response
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Node Not Found

    post:
      summary: Create Node by label and id
      operationId: postNodeByLabelAndId
      tags:
        - node
      parameters:
        - name: label
          in: path
          required: true
          description: The label of the Node to retrieve
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: The id of the Node to retrieve
          schema:
            type: string
      requestBody:
        description: Node Properties
        content:
          application/json:
            schema:
              type: object
            examples:
              person:
                summary: A person node example
                value: {"name": "Max De Marzi", "age": 39}
              location:
                summary: A location node example
                value: {"name": "Chicago", "type": "city"}
      responses:
        '201':
          description: Node Response
          content:
            application/json:
              schema:
                type: object

    delete:
      summary: Delete node by label and id
      operationId: deleteNodeByLabelAndId
      tags:
        - node
      parameters:
        - name: label
          in: path
          required: true
          description: The label of the Node to delete
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: The id of the Node to delete
          schema:
            type: string
components:
  schemas:
    RelationshipType:
      type: string
      pattern: "[A-Z0-9]{1,256}"
    Counts:
      additionalProperties:
        type: integer
    RelationshipTypes:
      type: array
      items:
        $ref: '#/components/schemas/RelationshipType'

    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string